#N canvas 191 54 989 667 10;
#X obj 311 140 bng 15 250 50 0 empty empty bang 17 7 0 10 -262144 -1
-1;
#X obj 311 240 bng 15 250 50 0 empty empty bang 17 7 0 10 -262144 -1
-1;
#X text 48 139 initialize by forcing zero-sl mkII;
#X text 48 159 to switch to the ableton template;
#X text 48 179 and set the transport mode on;
#X text 48 239 clear all buttons leds and lcd;
#X text 48 339 turn on off buttons from 0 to 31;
#X text 48 359 with state on off 0-1;
#X text 48 379 can be initialized with 2 arguments;
#X text 48 419 select which indicator to turn on;
#X text 48 459 from 0 to 3 for the right side;
#X text 48 439 from 0 to 5 for the left side;
#X text 48 479 can be initialized with 2 arguments;
#X text 48 519 select encoder from 0 to 7;
#X text 48 539 set the display mode of the led ring;
#X text 48 559 5 modes from 0 to 4 \, open the object;
#X text 48 579 for more info on modes.;
#X text 48 619 takes 3 initialization arguments;
#X text 48 599 draw level from 0 to 11;
#X text 518 239 write some text on the LCD;
#X text 518 259 on which line from 1 to 4;
#X text 518 279 1 = top left 2 = top right;
#X text 518 299 3 = bottom left 4 = bottom right;
#X text 518 319 on which slot of the line 0-7;
#X text 608 139 the slLCD object can be used in 2 ways:;
#X text 608 159 1: draw some text;
#X text 608 179 2: draw a value;
#X text 518 219 1:;
#X text 518 339 in this case takes 3 init arguments;
#X text 518 419 on which line from 1 to 4;
#X text 518 439 1 = top left 2 = top right;
#X text 518 459 3 = bottom left 4 = bottom right;
#X text 518 479 on which slot of the line 0-7;
#X text 518 399 write a value on the LCD;
#X text 518 499 in this case takes 2 init arguments;
#X text 518 379 2:;
#X obj 311 160 sl/slInit 1;
#X obj 311 260 sl/slClear 1;
#X floatatom 406 340 5 0 1 0 0-1 - -;
#X floatatom 311 340 5 0 31 0 0-31 - -;
#X floatatom 406 420 5 0 3 0 0-3 - -;
#X floatatom 311 420 5 0 5 0 o-5 - -;
#X obj 311 547 sl/slEncsState 0 0 6;
#X floatatom 311 520 5 0 7 0 0-7 - -;
#X floatatom 381 520 5 0 4 0 0-4 - -;
#X floatatom 451 520 5 0 11 0 0-11 - -;
#X obj 311 367 sl/slButtonsState 0 1;
#X obj 781 260 sl/slLCD 1 0 hello;
#X floatatom 846 230 5 0 7 0 0-7 - -;
#X floatatom 781 230 5 1 4 0 1-4 - -;
#X floatatom 846 390 5 0 7 0 0-7 - -;
#X floatatom 781 390 5 1 4 0 1-4 - -;
#X msg 894 229 ciao;
#X obj 781 420 sl/slLCD 3 0;
#X floatatom 906 390 5 0 0 0 val - -;
#X obj 906 540 ctlin 8 1;
#X text 48 199 set 1 argument for loadbang;
#X text 48 259 set 1 argument for loadbang;
#X text 48 279 the first object created will;
#X text 48 299 be the first to loadbang;
#X obj 906 563 / 127;
#X obj 906 609 + 1;
#X text 48 18 Instructions for Novation Zero SL MKII pure data abstractions
, f 61;
#X text 48 78 ZeroSL-mkII-MIDI 2 -> PureData MIDI-in 1, f 61;
#X text 48 98 PureData MIDI-out 1 -> ZeroSL-mkII-MIDI 2, f 61;
#X obj 906 586 * 10;
#X text 48 38 Before opening this patch make sure that the MIDI ports
on novation numbered 2 are both, f 87;
#X text 48 58 connected to MIDI input and output of the first pure
data MIDI port 1 Example:, f 78;
#X text 388 628 Note: the last input ports of these objects;
#X text 388 648 are the hot trigger ones.;
#X text 518 539 control this level using;
#X text 518 559 the encoder utility slEncIn;
#X obj 771 586 * 10;
#X obj 771 609 + 1;
#X text 518 599 or using pot on input cc 8;
#X obj 311 447 sl/slIndicator 1 1;
#X obj 771 563 / 127;
#X obj 771 540 sl/slEncIn 0 0 127 90;
#X text 518 579 4 arg: enc num 0-7 \, min \, max \, value;
#X connect 0 0 36 0;
#X connect 1 0 37 0;
#X connect 1 0 37 1;
#X connect 1 0 37 2;
#X connect 38 0 46 1;
#X connect 39 0 46 0;
#X connect 40 0 75 1;
#X connect 41 0 75 0;
#X connect 43 0 42 0;
#X connect 44 0 42 1;
#X connect 45 0 42 2;
#X connect 48 0 47 1;
#X connect 49 0 47 0;
#X connect 50 0 53 1;
#X connect 51 0 53 0;
#X connect 52 0 47 2;
#X connect 54 0 53 3;
#X connect 55 0 60 0;
#X connect 55 0 54 0;
#X connect 60 0 65 0;
#X connect 61 0 45 0;
#X connect 65 0 61 0;
#X connect 72 0 73 0;
#X connect 73 0 45 0;
#X connect 76 0 72 0;
#X connect 77 0 54 0;
#X connect 77 0 76 0;
